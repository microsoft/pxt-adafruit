// Auto-generated. Do not edit.
declare namespace music {

    /**
     * Sets the output destination for sounds generated by the music package
     * @param out the destination for sounds generated by the music package
     */
    //% weight=2
    //% blockId=music_set_output block="set output %out"
    //% parts="speaker" blockGap=8 advanced=true shim=music::setOutput
    function setOutput(out: SoundOutputDestination): void;

    /**
     * Sets the pin to output sound to when the sound output is set to "pin"
     * @param pin the pin to generate sound on
     */
    //% weight=1
    //% blockId=music_set_pitch_pin block="set pitch pin %pin"
    //% parts="speaker" blockGap=8 advanced=true shim=music::setPitchPin
    function setPitchPin(pin: PwmPin): void;

    /**
     * Sets the output volume of the on board speaker (if available)
     * @param volume the volume 0...255, eg: 128
     */
    //% weight=96
    //% blockId=synth_set_volume block="set speaker volume %volume"
    //% parts="speaker" blockGap=8
    //% volume.min=0 volume.max=255
    //% weight=1 shim=music::setSpeakerVolume
    function setSpeakerVolume(volume: int32): void;

    /**
     * Plays a tone through the pin for the given duration.
     * @param frequency pitch of the tone to play in Hertz (Hz)
     * @param ms tone duration in milliseconds (ms)
     */
    //% help=music/play-tone weight=90
    //% blockId=music_play_note block="play tone|at %note=device_note|for %duration=device_beat"
    //% parts="headphone" async
    //% blockNamespace=music shim=music::playTone
    function playTone(frequency: int32, ms: int32): void;
}

// Auto-generated. Do not edit. Really.
